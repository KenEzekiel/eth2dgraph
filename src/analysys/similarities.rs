use dgraph_tonic::{Client, Query};
use ethabi::Address;
use ethers::types::Bytes;
use rayon::prelude::*;
use serde::Deserialize;
use serde_json::Value;
use std::{
    collections::{HashMap, HashSet},
    fs::File,
    io::{LineWriter, Write},
    str::FromStr,
    sync::{Arc, Mutex},
    time::Instant,
};

#[derive(Debug, Clone)]
struct Skeleton {
    interface: HashSet<String>,
    ngrams: HashMap<Vec<u8>, usize>,
}

#[derive(Deserialize, Debug)]
struct Named {
    name: String,
}

#[derive(Deserialize, Debug)]
struct QueryItem {
    uid: String,
    bytecode: Option<String>,
    functions: Option<Vec<Named>>,
    events: Option<Vec<Named>>,
    errors: Option<Vec<Named>>,
}

#[derive(Deserialize, Debug)]
struct QueryResult {
    q: Vec<QueryItem>,
}

/// Get the uid of the skeleton for a contract address
/// @param endpoint The Dgraph GRPC endpoint
/// @param address The contract address
/// @return The skeleton uid of the address
async fn get_skeleton_from_address(
    endpoint: &str,
    address: &Address,
    ngram_length: u8,
) -> Result<Option<(String, Skeleton)>, Box<dyn std::error::Error>> {
    let query = r#"query q($address: string) {
    q(func: eq(Account.address, $address)) {
      d: ~ContractDeployment.contract {
        s: ContractDeployment.skeleton {
          uid
          bytecode: Skeleton.bytecode
          functions: Skeleton.functions{
            name: Function.name
          }
          events: Skeleton.events{
            name: Event.name
          }
          errors: Skeleton.errors{
            name: Error.name
          }
        }
      }
    }
  }"#;
    let client = Client::new(endpoint)?;
    let mut txn = client.new_read_only_txn();
    let mut vars = HashMap::new();
    vars.insert("$address", format!("{:?}", address));
    let resp = txn.query_with_vars(query, vars).await?;
    let data: Value = serde_json::from_slice(&resp.json)?;
    let q = &data["q"].as_array().unwrap();
    if q.len() == 0 {
        return Ok(None);
    }
    let q = &q[0];
    let d = &q["d"].as_array().unwrap();
    if d.len() == 0 {
        return Ok(None);
    }
    let d = &d[0];
    let item = d.get("s").unwrap();
    let item = serde_json::from_value::<QueryItem>(item.clone()).unwrap();
    let uid = &d["s"]
        .as_object()
        .unwrap()
        .get("uid")
        .unwrap()
        .as_str()
        .unwrap();
    let mut interface = HashSet::new();
    for function in item.functions.unwrap_or(Vec::new()) {
        interface.insert(function.name);
    }
    for event in item.events.unwrap_or(Vec::new()) {
        interface.insert(event.name);
    }
    for error in item.errors.unwrap_or(Vec::new()) {
        interface.insert(error.name);
    }
    let ngrams = bytecode2ngrams(&Bytes::from_str(&item.bytecode.unwrap())?, ngram_length);
    let skeleton = Skeleton { interface, ngrams };
    Ok(Some((uid.to_string(), skeleton)))
}

/// Calculate the ngrams of a bytecode
/// @param bytecode The bytecode to calculate the ngrams for
/// @param n The length of the ngrams
/// @return A map of ngrams as bytes to their frequency
fn bytecode2ngrams(bytecode: &[u8], n: u8) -> HashMap<Vec<u8>, usize> {
    let mut opcodes = Vec::new();
    let mut i = 0;
    // loop byte by byte and split into opcodes
    while i < bytecode.len() {
        let opcode = bytecode[i];
        opcodes.push(opcode);
        if bytecode[i] >= 0x60 && bytecode[i] <= 0x7f {
            i += (bytecode[i] - 0x5f) as usize; // skip push arguments
        }
        i += 1;
    }

    // compute the ngrams of fixed length n
    let mut ngrams = HashMap::new();

    if opcodes.len() < n as usize {
        return ngrams;
    }

    for i in 0..opcodes.len() - n as usize + 1 {
        let mut ngram = Vec::new();
        for j in 0..n {
            ngram.push(opcodes[i + j as usize]);
        }
        let count = ngrams.entry(ngram).or_insert(0);
        *count += 1;
    }

    ngrams
}

/// Load all skeletons from the database
async fn load_skeletons(
    endpoint: &str,
    ngram_length: u8,
) -> Result<HashMap<String, Skeleton>, Box<dyn std::error::Error>> {
    let now = Instant::now();
    let query = r#"query q($first: int, $offset: int) {
    q(func: type(Skeleton), first: $first, offset: $offset) {
      uid
      bytecode: Skeleton.bytecode
      functions: Skeleton.functions{
        name: Function.name
      }
      events: Skeleton.events{
        name: Event.name
      }
      errors: Skeleton.errors{
        name: Error.name
      }
    }
  }"#;
    let client = Client::new(endpoint).expect("Dgraph client");
    let mut txn = client.new_read_only_txn();
    let mut raw_skeletons = Vec::new();
    let window = 1000;
    let mut offset = 0;
    loop {
        let mut vars = HashMap::new();
        vars.insert("$first", window.to_string());
        vars.insert("$offset", offset.to_string());
        let resp = txn.query_with_vars(query, vars).await?;
        let data: QueryResult = serde_json::from_slice(&resp.json)?;
        let done = data.q.len() < 1000;
        raw_skeletons.extend(data.q);
        println!("Loaded {} skeletons", raw_skeletons.len());
        if done {
            break;
        }
        offset += 1000;
    }
    println!(
        "Loaded {} skeletons in {:?}",
        raw_skeletons.len(),
        now.elapsed()
    );
    let now = Instant::now();
    let mut result = HashMap::new();
    for item in raw_skeletons.into_iter() {
        let mut interface = HashSet::new();
        for function in item.functions.unwrap_or(Vec::new()) {
            interface.insert(function.name);
        }
        for event in item.events.unwrap_or(Vec::new()) {
            interface.insert(event.name);
        }
        for error in item.errors.unwrap_or(Vec::new()) {
            interface.insert(error.name);
        }
        let ngrams = bytecode2ngrams(&Bytes::from_str(&item.bytecode.unwrap())?, ngram_length);
        let skeleton = Skeleton { interface, ngrams };
        result.insert(item.uid, skeleton);
    }
    println!(
        "Processed {} skeletons in {:?}",
        result.len(),
        now.elapsed()
    );
    Ok(result)
}

/// Calculate the cosine similarity between two bytecodes, without normalizing the vectors
fn cosine_similarity(a: &HashMap<Vec<u8>, usize>, b: &HashMap<Vec<u8>, usize>) -> f64 {
    let (shortest, longest) = if a.len() < b.len() { (a, b) } else { (b, a) };

    let mut dot_product = 0.0;
    for key in shortest.keys() {
        if let Some(value) = longest.get(key) {
            dot_product += (*shortest.get(key).unwrap() as f64) * (*value as f64);
        }
    }

    let a_mag: f64 = a.values().fold(0.0, |acc, val| acc + (val * val) as f64);
    let b_mag: f64 = b.values().fold(0.0, |acc, val| acc + (val * val) as f64);

    dot_product / (a_mag * b_mag).sqrt()
}

/// Calculate the Jaccard similarity between two interfaces
fn interface_similarity(a: &HashSet<String>, b: &HashSet<String>) -> f64 {
    if a.is_empty() || b.is_empty() {
        return 0.0;
    }
    a.intersection(b).count() as f64 / a.union(b).count() as f64
}

async fn compare_all(
    endpoint: &str,
    output_path: &str,
    interface_sim: bool,
    interface_threshold: f64,
    cosine_sim: bool,
    cosine_threshold: f64,
    ngram_length: u8,
) {
    let skeletons = load_skeletons(endpoint, ngram_length).await.unwrap();
    let (send, recv) = tokio::sync::oneshot::channel();
    let uids = skeletons.keys().cloned().collect::<Vec<String>>();
    // create output file
    let file = File::create(output_path).unwrap();
    let file = Arc::new(Mutex::new(LineWriter::new(file)));
    // If no target address is specified, compute similarity between all skeletons
    rayon::spawn(move || {
        // Compute in parallel the similarity of each skeleton with all other skeletons.
        uids.par_iter().enumerate().for_each(|(i, uid)| {
            // compute similarity of uid[i] with uids[i+1..]
            let skeleton = &skeletons[uid];
            let file = file.clone();
            skeletons
                .iter()
                .skip(i + 1)
                .for_each(|(other_uid, other_skeleton)| {
                    if interface_sim {
                        let interface_similarity =
                            interface_similarity(&skeleton.interface, &other_skeleton.interface);
                        if interface_similarity >= interface_threshold {
                            let mut file = file.lock().unwrap();
                            write!(
                                file,
                                "<{}> <Skeleton.similar_interface> <{}> (similarity={:.4}) .\n",
                                uid, other_uid, interface_similarity
                            )
                            .unwrap();
                            write!(
                                file,
                                "<{}> <Skeleton.similar_interface> <{}> (similarity={:.4}) .\n",
                                other_uid, uid, interface_similarity
                            )
                            .unwrap();
                        }
                    }
                    if cosine_sim {
                        let ngram_similarity =
                            cosine_similarity(&skeleton.ngrams, &other_skeleton.ngrams);
                        if ngram_similarity >= cosine_threshold {
                            let mut file = file.lock().unwrap();
                            write!(
                                file,
                                "<{}> <Skeleton.similar_code> <{}> (similarity={:.4}) .\n",
                                uid, other_uid, ngram_similarity
                            )
                            .unwrap();
                            write!(
                                file,
                                "<{}> <Skeleton.similar_code> <{}> (similarity={:.4}) .\n",
                                other_uid, uid, ngram_similarity
                            )
                            .unwrap();
                        }
                    }
                });
            println!("Processed skeleton: {} with index: {}", uid, i);
        });
        // Send the result back to Tokio.
        let _ = send.send(());
    });
    // Wait for the rayon task.
    recv.await.expect("Panic in rayon::spawn");
}

async fn compare_single(
    endpoint: &str,
    output_path: &str,
    address: String,
    interface_sim: bool,
    interface_threshold: f64,
    cosine_sim: bool,
    cosine_threshold: f64,
    ngram_length: u8,
) {
    // If target address is specified, compute similarity only with that skeleton
    let address = Address::from_str(&address).unwrap();
    let target = get_skeleton_from_address(endpoint, &address, ngram_length).await.unwrap();
    if target.is_none() {
        println!("No skeleton found for address: {:?}", address);
        return;
    }
    let (target_uid, target_skeleton) = target.unwrap();
    println!("Comparing skeleton: {}", target_uid);
    let query = r#"query q($first: int, $offset: int) {
    q(func: type(Skeleton), first: $first, offset: $offset) {
      uid
      bytecode: Skeleton.bytecode
      functions: Skeleton.functions{
        name: Function.name
      }
      events: Skeleton.events{
        name: Event.name
      }
      errors: Skeleton.errors{
        name: Error.name
      }
    }
    }"#;
    let client = Client::new(endpoint).expect("Dgraph client");
    let mut txn = client.new_read_only_txn();
    let window = 1000;
    let mut offset = 0;
    let file = File::create(output_path).unwrap();
    let file = Arc::new(Mutex::new(LineWriter::new(file)));
    loop {
        let mut vars = HashMap::new();
        vars.insert("$first", window.to_string());
        vars.insert("$offset", offset.to_string());
        let resp = txn.query_with_vars(query, vars).await.unwrap();
        let data: QueryResult = serde_json::from_slice(&resp.json).unwrap();
        let done = data.q.len() < 1000;
        let (send, recv) = tokio::sync::oneshot::channel();
        let file = file.clone();
        let target_skeleton = target_skeleton.clone();
        let target_uid = target_uid.clone();
        rayon::spawn(move || {
            data.q.into_par_iter().for_each(|item| {
                if target_uid == item.uid {
                    return;
                }
                let mut interface = HashSet::new();
                for function in item.functions.unwrap_or(Vec::new()) {
                    interface.insert(function.name);
                }
                for event in item.events.unwrap_or(Vec::new()) {
                    interface.insert(event.name);
                }
                for error in item.errors.unwrap_or(Vec::new()) {
                    interface.insert(error.name);
                }
                if interface_sim {
                    let interface_similarity =
                        interface_similarity(&target_skeleton.interface, &interface);
                    if interface_similarity >= interface_threshold {
                        let mut file = file.lock().unwrap();
                        writeln!(
                            file,
                            "<{}> <Skeleton.similar_interface> <{}> (similarity={:.4}) .",
                            target_uid, item.uid, interface_similarity
                        )
                        .unwrap();
                        writeln!(
                            file,
                            "<{}> <Skeleton.similar_interface> <{}> (similarity={:.4}) .",
                            item.uid, target_uid, interface_similarity
                        )
                        .unwrap();
                    }
                }
                if cosine_sim {
                    let ngrams = bytecode2ngrams(&Bytes::from_str(&item.bytecode.unwrap()).unwrap(), ngram_length);
                    let cosine_similarity = cosine_similarity(&target_skeleton.ngrams, &ngrams);
                    if cosine_similarity >= cosine_threshold {
                        let mut file = file.lock().unwrap();
                        writeln!(
                            file,
                            "<{}> <Skeleton.similar_code> <{}> (similarity={:.4}) .",
                            target_uid, item.uid, cosine_similarity
                        )
                        .unwrap();
                        writeln!(
                            file,
                            "<{}> <Skeleton.similar_code> <{}> (similarity={:.4}) .",
                            item.uid, target_uid, cosine_similarity
                        )
                        .unwrap();
                    }
                }
            });
            send.send(()).unwrap();
        });
        // Wait for the rayon task.
        recv.await.expect("Panic in rayon::spawn");
        if done {
            break;
        }
        offset += 1000;
        println!("Processed {} skeletons", offset);
    }
}

pub async fn find_similar_skeletons(
    endpoint: &str,
    output_path: &str,
    address: Option<String>,
    interface_sim: bool,
    interface_threshold: f64,
    cosine_sim: bool,
    cosine_threshold: f64,
    ngram_length: u8,
) {
    if !interface_sim && !cosine_sim {
        panic!("At least one similarity metric must be enabled");
    }

    let now = Instant::now();

    if address.is_none() {
        compare_all(
            endpoint,
            output_path,
            interface_sim,
            interface_threshold,
            cosine_sim,
            cosine_threshold,
            ngram_length,
        )
        .await;
    } else {
        compare_single(
            endpoint,
            output_path,
            address.unwrap(),
            interface_sim,
            interface_threshold,
            cosine_sim,
            cosine_threshold,
            ngram_length,
        )
        .await;
    }
    println!("Done. Total time elapsed: {:?}", now.elapsed());
}

#[cfg(test)]
mod tests {
    use super::{bytecode2ngrams, cosine_similarity};
    use crate::analysys::similarities::get_skeleton_from_address;
    use ethabi::Address;
    use ethers::types::Bytes;
    use std::str::FromStr;

    #[test]
    fn test_similar_bytecode_similarity() {
        let bytecode = "0x6000600052600036106100005760003560001c8063000000001161000057806300000000116100005780630000000011610000578063000000001461000057806300000000146100005780630000000014610000578063000000001461000057610000565b8063000000001461000057806300000000146100005780630000000014610000578063000000001461000057610000565b80630000000011610000578063000000001461000057806300000000146100005780630000000014610000578063000000001461000057610000565b806300000000146100005780630000000014610000578063000000001461000057610000565b806300000000116100005780630000000011610000578063000000001461000057806300000000146100005780630000000014610000578063000000001461000057610000565b8063000000001461000057806300000000146100005780630000000014610000578063000000001461000057610000565b80630000000011610000578063000000001461000057806300000000146100005780630000000014610000578063000000001461000057610000565b8062000000146100005780630000000014610000578063000000001461000057610000565b3661000057005b600080fd5b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b50610000610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60005b81518110156100005760006000600084848151811061000057610000610000565b5b60000260000101517300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060006100000a8154816000021916908315150217905550808061000090610000565b915050610000565b5050565b60006000518060000160005280600081526000017f0000000000000000000000000000000000000000000000000000000000000000815250905090565b6000610000610000610000565b8484610000565b6000905092915050565b600060009054906100000a90047300000000000000000000000000000000000000001681565b6000670000000000000000905090565b6000610000848484610000565b61000084610000610000565b6100008560005180600001600052806000815260000161000060009139600060008b730000000000000000000000000000000000000000167300000000000000000000000000000000000000001681526000019081526000016000206000610000610000565b730000000000000000000000000000000000000000167300000000000000000000000000000000000000001681526000019081526000016000205461000090929190630000000016565b610000565b600090509392505050565b60005481565b60006000905090565b600060009054906100000a90047300000000000000000000000000000000000000001681565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b600060006000837300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060006100000a815481600002191690831515021790555050565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b80600060006100000a815481600002191690831515021790555050565b600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016610000610000565b7300000000000000000000000000000000000000001614806100005750600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016610000610000565b73000000000000000000000000000000000000000016145b61000057600080fd5b600047905061000081610000565b50565b600061000060006000847300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002054610000565b9050919050565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60007300000000000000000000000000000000000000001660008054906100000a900473000000000000000000000000000000000000000016730000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000060005160005180910390a360008060006100000a8154817300000000000000000000000000000000000000000219169083730000000000000000000000000000000000000000160217905550565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b8060008190555050565b60005481565b60006000528060005260006000206000915090505481565b60008060009054906100000a900473000000000000000000000000000000000000000016905090565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b80600060006100000a815481600002191690831515021790555050565b60005481565b60006000518060000160005280600081526000017f0000000000000000000000000000000000000000000000000000000000000000815250905090565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b8060008190555050565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b8360008190555082600081905550816000819055508060008190555050505050565b6000610000610000610000565b8484610000565b6000905092915050565b60006000528060005260006000206000915054906100000a900460001681565b600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016610000610000565b7300000000000000000000000000000000000000001614806100005750600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016610000610000565b73000000000000000000000000000000000000000016145b61000057600080fd5b600061000030610000565b905061000081610000565b50565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60005b8383905081101561000057816000600086868581811061000057610000610000565b5b90506000020160008101906100009190610000565b7300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060006100000a8154816000021916908315150217905550808061000090610000565b915050610000565b50505050565b60006000600084730000000000000000000000000000000000000000167300000000000000000000000000000000000000001681526000019081526000016000206000837300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002054905092915050565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b8060008190555050565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60007300000000000000000000000000000000000000001681730000000000000000000000000000000000000000161415610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b807300000000000000000000000000000000000000001660008054906100000a900473000000000000000000000000000000000000000016730000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000060005160005180910390a3806000806100000a815481730000000000000000000000000000000000000000021916908373000000000000000000000000000000000000000016021790555050565b600033905090565b60007300000000000000000000000000000000000000001683730000000000000000000000000000000000000000161415610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60007300000000000000000000000000000000000000001682730000000000000000000000000000000000000000161415610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b806000600085730000000000000000000000000000000000000000167300000000000000000000000000000000000000001681526000019081526000016000206000847300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002081905550817300000000000000000000000000000000000000001683730000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836000516100009190610000565b60005180910390a3505050565b60007300000000000000000000000000000000000000001683730000000000000000000000000000000000000000161415610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60007300000000000000000000000000000000000000001682730000000000000000000000000000000000000000161415610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60008111610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b610000610000565b730000000000000000000000000000000000000000168373000000000000000000000000000000000000000016141580156100005750610000610000565b73000000000000000000000000000000000000000016827300000000000000000000000000000000000000001614155b1561000057600060009054906100000a900460001661000057610000610000565b73000000000000000000000000000000000000000016837300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b5b600054811115610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60006000847300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060009054906100000a9004600016158015610000575060006000837300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060009054906100000a9004600016155b610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016827300000000000000000000000000000000000000001614610000576000548161000084610000565b6100009190610000565b10610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b5b600061000030610000565b90506000600054821015905060005482106100005760005491505b808015610000575060008054906100000a9004600016155b80156100005750600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016857300000000000000000000000000000000000000001614155b80156100005750600060009054906100000a90046000165b8015610000575060006000867300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060009054906100000a9004600016155b8015610000575060006000857300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060009054906100000a9004600016155b156100005761000082610000565b600047905060008111156100005761000047610000565b5b505b50505b60006000905060006000857300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060009054906100000a900460001680610000575060006000847300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060009054906100000a90046000165b806100005750600060009054906100000a900473000000000000000000000000000000000000000016730000000000000000000000000000000000000000168473000000000000000000000000000000000000000016141580156100005750600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016837300000000000000000000000000000000000000001614155b5b156100005760009050610000565b600060009054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001684730000000000000000000000000000000000000000161480156100005750600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016837300000000000000000000000000000000000000001614155b15610000576000546000819055506000546000819055505b600060009054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001683730000000000000000000000000000000000000000161480156100005750600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016847300000000000000000000000000000000000000001614155b15610000576000546000819055506000546000819055505b5b61000084848484610000565b50505050565b6000838311158290610000576000517f000000000000000000000000000000000000000000000000000000000000000081526000016100009190610000565b60005180910390fd5b50600083856100009190610000565b9050809150509392505050565b600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016610000829081150290600051600060005180830381858888f19350505050158015610000573d6000803e3d6000fd5b5050565b6000600054821115610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b6000610000610000565b90506100008184610000909190630000000016565b915050919050565b60006000806100000a81548160000219169083151502179055506000600067000000000000000081111561000057610000610000565b5b6000519080825280600002600001820160005280156100005781600001600082028036833780820191505090505b509050308160008151811061000057610000610000565b5b60000260000101907300000000000000000000000000000000000000001690817300000000000000000000000000000000000000001681525050600060009054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001663000000006000518163000000001660001b815260000160006000518083038186803b15801561000057600080fd5b505afa158015610000573d6000803e3d6000fd5b505050506000513d6000196000820116820180600052508101906100009190610000565b8160008151811061000057610000610000565b5b6000026000010190730000000000000000000000000000000000000000169081730000000000000000000000000000000000000000168152505061000030600060009054906100000a90047300000000000000000000000000000000000000001684610000565b600060009054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001663000000008360008430426000518663000000001660001b8152600001610000959493929190610000565b600060005180830381600087803b15801561000057600080fd5b505af1158015610000573d6000803e3d6000fd5b505050505060006000806100000a815481600002191690831515021790555050565b8061000057610000610000565b5b610000848484610000565b8061000057610000610000565b5b50505050565b6000806000610000610000565b915091506100008183610000909190630000000016565b9250505090565b600061000083836000518060000160005280600081526000017f0000000000000000000000000000000000000000000000000000000000000000815250610000565b905092915050565b600060005414801561000057506000600054145b1561000057610000565b600054600081905550600054600081905550600060008190555060006000819055505b565b60008060008060008061000087610000565b95509550955095509550955061000086600060008c7300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002054610000909190630000000016565b600060008b730000000000000000000000000000000000000000167300000000000000000000000000000000000000001681526000019081526000016000208190555061000085600060008b7300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002054610000909190630000000016565b600060008a730000000000000000000000000000000000000000167300000000000000000000000000000000000000001681526000019081526000016000208190555061000081610000565b6100008483610000565b877300000000000000000000000000000000000000001689730000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000856000516100009190610000565b60005180910390a3505050505050505050565b600054600081905550600054600081905550565b6000806000600054905060006700000000000000009050610000670000000000000000600054610000909190630000000016565b82101561000057600054670000000000000000935093505050610000565b81819350935050505b9091565b60008083118290610000576000517f000000000000000000000000000000000000000000000000000000000000000081526000016100009190610000565b60005180910390fd5b50600083856100009190610000565b9050809150509392505050565b60008060008060008060008060006100008a600054600054610000565b9250925092506000610000610000565b905060008060006100008e878787610000565b9250925092508282828989899c509c509c509c509c509c505050505050505091939550919395565b600061000083836000518060000160005280600081526000017f0000000000000000000000000000000000000000000000000000000000000000815250610000565b905092915050565b60008082846100009190610000565b905083811015610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b8091505092915050565b6000610000610000565b905060006100008284610000909190630000000016565b90506100008160006000307300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002054610000909190630000000016565b60006000307300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002081905550505050565b61000082600054610000909190630000000016565b60008190555061000081600054610000909190630000000016565b6000819055505050565b6000806000806100006000610000888a610000909190630000000016565b610000909190630000000016565b905060006100006000610000888b610000909190630000000016565b610000909190630000000016565b9050600061000082610000858c610000909190630000000016565b610000909190630000000016565b905080838395509550955050505093509350939050565b6000806000806100008589610000909190630000000016565b905060006100008689610000909190630000000016565b905060006100008789610000909190630000000016565b90506000610000826100008587610000909190630000000016565b610000909190630000000016565b9050838184965096509650505050509450945094915050565b6000808314156100005760009050610000565b600082846100009190610000565b90508284826100009190610000565b14610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b809150505b92915050565b6000600051905090565b600080fd5b600080fd5b600080fd5b600060001960008301169050919050565b7f0000000000000000000000000000000000000000000000000000000000000000600052600060005260006000fd5b61000082610000565b81018181106700000000000000008211171561000057610000610000565b5b80600052505050565b6000610000610000565b90506100008282610000565b919050565b600067000000000000000082111561000057610000610000565b5b600082029050600081019050919050565b600080fd5b600073000000000000000000000000000000000000000082169050919050565b600061000082610000565b9050919050565b61000081610000565b811461000057600080fd5b50565b60008135905061000081610000565b92915050565b600061000061000084610000565b610000565b9050808382526000820190506000840283018581111561000057610000610000565b5b835b8181101561000057806100008882610000565b845260008401935050600081019050610000565b5050509392505050565b600082600083011261000057610000610000565b5b8135610000848260008601610000565b91505092915050565b60006000828403121561000057610000610000565b5b600082013567000000000000000081111561000057610000610000565b5b61000084828501610000565b91505092915050565b600081519050919050565b600082825260008201905092915050565b60005b83811015610000578082015181840152600081019050610000565b83811115610000576000848401525b50505050565b600061000082610000565b6100008185610000565b9350610000818560008601610000565b61000081610000565b840191505092915050565b600060008201905081810360008301526100008184610000565b905092915050565b6000819050919050565b61000081610000565b811461000057600080fd5b50565b60008135905061000081610000565b92915050565b6000806000838503121561000057610000610000565b5b600061000085828601610000565b925050600061000085828601610000565b9150509250929050565b60008115159050919050565b61000081610000565b82525050565b60006000820190506100006000830184610000565b92915050565b6000819050919050565b600061000061000061000084610000565b610000565b610000565b9050919050565b600061000082610000565b9050919050565b600061000082610000565b9050919050565b61000081610000565b82525050565b60006000820190506100006000830184610000565b92915050565b61000081610000565b82525050565b60006000820190506100006000830184610000565b92915050565b60008060006000848603121561000057610000610000565b5b600061000086828701610000565b935050600061000086828701610000565b925050600061000086828701610000565b9150509250925092565b6000600082169050919050565b61000081610000565b82525050565b60006000820190506100006000830184610000565b92915050565b61000081610000565b82525050565b60006000820190506100006000830184610000565b92915050565b60006000828403121561000057610000610000565b5b600061000084828501610000565b91505092915050565b61000081610000565b811461000057600080fd5b50565b60008135905061000081610000565b92915050565b60006000828403121561000057610000610000565b5b600061000084828501610000565b91505092915050565b60006000828403121561000057610000610000565b5b600061000084828501610000565b91505092915050565b6000806000806000858703121561000057610000610000565b5b600061000087828801610000565b945050600061000087828801610000565b935050600061000087828801610000565b925050600061000087828801610000565b91505092959194509250565b600080fd5b60008083600084011261000057610000610000565b5b8235905067000000000000000081111561000057610000610000565b5b60008301915083600082028301111561000057610000610000565b5b9250929050565b60008060006000848603121561000057610000610000565b5b600084013567000000000000000081111561000057610000610000565b5b61000086828701610000565b9350935050600061000086828701610000565b9150509250925092565b6000806000838503121561000057610000610000565b5b600061000085828601610000565b925050600061000085828601610000565b9150509250929050565b7f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f0000000000000000000000000000000000000000000000000000000000000000600052600060005260006000fd5b7f0000000000000000000000000000000000000000000000000000000000000000600052600060005260006000fd5b600061000082610000565b91507f000000000000000000000000000000000000000000000000000000000000000082141561000057610000610000565b5b600082019050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b600061000082610000565b915061000083610000565b9250827f00000000000000000000000000000000000000000000000000000000000000000382111561000057610000610000565b5b828201905092915050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b600061000082610000565b915061000083610000565b92508282101561000057610000610000565b5b828203905092915050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b60008151905061000081610000565b92915050565b60006000828403121561000057610000610000565b5b600061000084828501610000565b91505092915050565b6000819050919050565b600061000061000061000084610000565b610000565b610000565b9050919050565b61000081610000565b82525050565b600081519050919050565b600082825260008201905092915050565b6000819050600082019050919050565b61000081610000565b82525050565b60006100008383610000565b60008301905092915050565b6000600082019050919050565b600061000082610000565b6100008185610000565b935061000083610000565b8060005b838110156100005781516100008882610000565b975061000083610000565b925050600081019050610000565b5085935050505092915050565b60006000820190506100006000830188610000565b6100006000830187610000565b81810360008301526100008186610000565b90506100006000830185610000565b6100006000830184610000565b9695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000600052600060005260006000fd5b600061000082610000565b915061000083610000565b92508261000057610000610000565b5b828204905092915050565b7f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b600061000082610000565b915061000083610000565b9250817f0000000000000000000000000000000000000000000000000000000000000000048311821515161561000057610000610000565b5b828202905092915050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b905091905056fe45524332303a20740000000000000000000000000000000000000000007300000000000000000000".to_string();
        let similar_bytecode = "0x6000600052600036106100005760003560001c8063000000001161000057806300000000116100005780630000000011610000578063000000001461000057806300000000146100005780630000000014610000578063000000001461000057610000565b8063000000001461000057806300000000146100005780630000000014610000578063000000001461000057610000565b80630000000011610000578063000000001461000057806300000000146100005780630000000014610000578063000000001461000057610000565b806300000000146100005780630000000014610000578063000000001461000057610000565b806300000000116100005780630000000011610000578063000000001461000057806300000000146100005780630000000014610000578063000000001461000057610000565b8063000000001461000057806300000000146100005780630000000014610000578063000000001461000057610000565b80630000000011610000578063000000001461000057806300000000146100005780630000000014610000578063000000001461000057610000565b8062000000146100005780630000000014610000578063000000001461000057610000565b3661000057005b600080fd5b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b50610000610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b50610000610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b6000516100009190610000565b60005180910390f35b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b34801561000057600080fd5b5061000060008036038101906100009190610000565b610000565b005b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60005b81518110156100005760006000600084848151811061000057610000610000565b5b60000260000101517300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060006100000a8154816000021916908315150217905550808061000090610000565b915050610000565b5050565b60006000518060000160005280600081526000017f0000000000000000000000000000000000000000000000000000000000000000815250905090565b6000610000610000610000565b8484610000565b6000905092915050565b600060009054906100000a90047300000000000000000000000000000000000000001681565b6000670000000000000000905090565b6000610000848484610000565b61000084610000610000565b6100008560005180600001600052806000815260000161000060009139600060008b730000000000000000000000000000000000000000167300000000000000000000000000000000000000001681526000019081526000016000206000610000610000565b730000000000000000000000000000000000000000167300000000000000000000000000000000000000001681526000019081526000016000205461000090929190630000000016565b610000565b600090509392505050565b60005481565b60006000905090565b600060009054906100000a90047300000000000000000000000000000000000000001681565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b600060006000837300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060006100000a815481600002191690831515021790555050565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b80600060006100000a815481600002191690831515021790555050565b600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016610000610000565b7300000000000000000000000000000000000000001614806100005750600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016610000610000565b73000000000000000000000000000000000000000016145b61000057600080fd5b600047905061000081610000565b50565b600061000060006000847300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002054610000565b9050919050565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60007300000000000000000000000000000000000000001660008054906100000a900473000000000000000000000000000000000000000016730000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000060005160005180910390a360008060006100000a8154817300000000000000000000000000000000000000000219169083730000000000000000000000000000000000000000160217905550565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b8060008190555050565b60005481565b60006000528060005260006000206000915090505481565b60008060009054906100000a900473000000000000000000000000000000000000000016905090565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b80600060006100000a815481600002191690831515021790555050565b60005481565b60006000518060000160005280600081526000017f0000000000000000000000000000000000000000000000000000000000000000815250905090565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b8060008190555050565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b8360008190555082600081905550816000819055508060008190555050505050565b6000610000610000610000565b8484610000565b6000905092915050565b60006000528060005260006000206000915054906100000a900460001681565b600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016610000610000565b7300000000000000000000000000000000000000001614806100005750600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016610000610000565b73000000000000000000000000000000000000000016145b61000057600080fd5b600061000030610000565b905061000081610000565b50565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60005b8383905081101561000057816000600086868581811061000057610000610000565b5b90506000020160008101906100009190610000565b7300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060006100000a8154816000021916908315150217905550808061000090610000565b915050610000565b50505050565b60006000600084730000000000000000000000000000000000000000167300000000000000000000000000000000000000001681526000019081526000016000206000837300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002054905092915050565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b8060008190555050565b610000610000565b7300000000000000000000000000000000000000001660008054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60007300000000000000000000000000000000000000001681730000000000000000000000000000000000000000161415610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b807300000000000000000000000000000000000000001660008054906100000a900473000000000000000000000000000000000000000016730000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000060005160005180910390a3806000806100000a815481730000000000000000000000000000000000000000021916908373000000000000000000000000000000000000000016021790555050565b600033905090565b60007300000000000000000000000000000000000000001683730000000000000000000000000000000000000000161415610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60007300000000000000000000000000000000000000001682730000000000000000000000000000000000000000161415610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b806000600085730000000000000000000000000000000000000000167300000000000000000000000000000000000000001681526000019081526000016000206000847300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002081905550817300000000000000000000000000000000000000001683730000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000836000516100009190610000565b60005180910390a3505050565b60007300000000000000000000000000000000000000001683730000000000000000000000000000000000000000161415610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60007300000000000000000000000000000000000000001682730000000000000000000000000000000000000000161415610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60008111610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b610000610000565b730000000000000000000000000000000000000000168373000000000000000000000000000000000000000016141580156100005750610000610000565b73000000000000000000000000000000000000000016827300000000000000000000000000000000000000001614155b1561000057600060009054906100000a900460001661000057610000610000565b73000000000000000000000000000000000000000016837300000000000000000000000000000000000000001614610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b5b600054811115610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b60006000847300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060009054906100000a9004600016158015610000575060006000837300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060009054906100000a9004600016155b610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016827300000000000000000000000000000000000000001614610000576000548161000084610000565b6100009190610000565b10610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b5b600061000030610000565b90506000600054821015905060005482106100005760005491505b808015610000575060008054906100000a9004600016155b80156100005750600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016857300000000000000000000000000000000000000001614155b80156100005750600060009054906100000a90046000165b8015610000575060006000867300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060009054906100000a9004600016155b8015610000575060006000857300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060009054906100000a9004600016155b156100005761000082610000565b600047905060008111156100005761000047610000565b5b505b50505b60006000905060006000857300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060009054906100000a900460001680610000575060006000847300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002060009054906100000a90046000165b806100005750600060009054906100000a900473000000000000000000000000000000000000000016730000000000000000000000000000000000000000168473000000000000000000000000000000000000000016141580156100005750600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016837300000000000000000000000000000000000000001614155b5b156100005760009050610000565b600060009054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001684730000000000000000000000000000000000000000161480156100005750600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016837300000000000000000000000000000000000000001614155b15610000576000546000819055506000546000819055505b600060009054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001683730000000000000000000000000000000000000000161480156100005750600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016847300000000000000000000000000000000000000001614155b15610000576000546000819055506000546000819055505b5b61000084848484610000565b50505050565b6000838311158290610000576000517f000000000000000000000000000000000000000000000000000000000000000081526000016100009190610000565b60005180910390fd5b50600083856100009190610000565b9050809150509392505050565b600060009054906100000a90047300000000000000000000000000000000000000001673000000000000000000000000000000000000000016610000829081150290600051600060005180830381858888f19350505050158015610000573d6000803e3d6000fd5b5050565b6000600054821115610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b6000610000610000565b90506100008184610000909190630000000016565b915050919050565b60006000806100000a81548160000219169083151502179055506000600067000000000000000081111561000057610000610000565b5b6000519080825280600002600001820160005280156100005781600001600082028036833780820191505090505b509050308160008151811061000057610000610000565b5b60000260000101907300000000000000000000000000000000000000001690817300000000000000000000000000000000000000001681525050600060009054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001663000000006000518163000000001660001b815260000160006000518083038186803b15801561000057600080fd5b505afa158015610000573d6000803e3d6000fd5b505050506000513d6000196000820116820180600052508101906100009190610000565b8160008151811061000057610000610000565b5b6000026000010190730000000000000000000000000000000000000000169081730000000000000000000000000000000000000000168152505061000030600060009054906100000a90047300000000000000000000000000000000000000001684610000565b600060009054906100000a9004730000000000000000000000000000000000000000167300000000000000000000000000000000000000001663000000008360008430426000518663000000001660001b8152600001610000959493929190610000565b600060005180830381600087803b15801561000057600080fd5b505af1158015610000573d6000803e3d6000fd5b505050505060006000806100000a815481600002191690831515021790555050565b8061000057610000610000565b5b610000848484610000565b8061000057610000610000565b5b50505050565b6000806000610000610000565b915091506100008183610000909190630000000016565b9250505090565b600061000083836000518060000160005280600081526000017f0000000000000000000000000000000000000000000000000000000000000000815250610000565b905092915050565b600060005414801561000057506000600054145b1561000057610000565b600054600081905550600054600081905550600060008190555060006000819055505b565b60008060008060008061000087610000565b95509550955095509550955061000086600060008c7300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002054610000909190630000000016565b600060008b730000000000000000000000000000000000000000167300000000000000000000000000000000000000001681526000019081526000016000208190555061000085600060008b7300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002054610000909190630000000016565b600060008a730000000000000000000000000000000000000000167300000000000000000000000000000000000000001681526000019081526000016000208190555061000081610000565b6100008483610000565b877300000000000000000000000000000000000000001689730000000000000000000000000000000000000000167f0000000000000000000000000000000000000000000000000000000000000000856000516100009190610000565b60005180910390a3505050505050505050565b600054600081905550600054600081905550565b6000806000600054905060006700000000000000009050610000670000000000000000600054610000909190630000000016565b82101561000057600054670000000000000000935093505050610000565b81819350935050505b9091565b60008083118290610000576000517f000000000000000000000000000000000000000000000000000000000000000081526000016100009190610000565b60005180910390fd5b50600083856100009190610000565b9050809150509392505050565b60008060008060008060008060006100008a600054600054610000565b9250925092506000610000610000565b905060008060006100008e878787610000565b9250925092508282828989899c509c509c509c509c509c505050505050505091939550919395565b600061000083836000518060000160005280600081526000017f0000000000000000000000000000000000000000000000000000000000000000815250610000565b905092915050565b60008082846100009190610000565b905083811015610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b8091505092915050565b6000610000610000565b905060006100008284610000909190630000000016565b90506100008160006000307300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002054610000909190630000000016565b60006000307300000000000000000000000000000000000000001673000000000000000000000000000000000000000016815260000190815260000160002081905550505050565b61000082600054610000909190630000000016565b60008190555061000081600054610000909190630000000016565b6000819055505050565b6000806000806100006000610000888a610000909190630000000016565b610000909190630000000016565b905060006100006000610000888b610000909190630000000016565b610000909190630000000016565b9050600061000082610000858c610000909190630000000016565b610000909190630000000016565b905080838395509550955050505093509350939050565b6000806000806100008589610000909190630000000016565b905060006100008689610000909190630000000016565b905060006100008789610000909190630000000016565b90506000610000826100008587610000909190630000000016565b610000909190630000000016565b9050838184965096509650505050509450945094915050565b6000808314156100005760009050610000565b600082846100009190610000565b90508284826100009190610000565b14610000576000517f0000000000000000000000000000000000000000000000000000000000000000815260000161000090610000565b60005180910390fd5b809150505b92915050565b6000600051905090565b600080fd5b600080fd5b600080fd5b600060001960008301169050919050565b7f0000000000000000000000000000000000000000000000000000000000000000600052600060005260006000fd5b61000082610000565b81018181106700000000000000008211171561000057610000610000565b5b80600052505050565b6000610000610000565b90506100008282610000565b919050565b600067000000000000000082111561000057610000610000565b5b600082029050600081019050919050565b600080fd5b600073000000000000000000000000000000000000000082169050919050565b600061000082610000565b9050919050565b61000081610000565b811461000057600080fd5b50565b60008135905061000081610000565b92915050565b600061000061000084610000565b610000565b9050808382526000820190506000840283018581111561000057610000610000565b5b835b8181101561000057806100008882610000565b845260008401935050600081019050610000565b5050509392505050565b600082600083011261000057610000610000565b5b8135610000848260008601610000565b91505092915050565b60006000828403121561000057610000610000565b5b600082013567000000000000000081111561000057610000610000565b5b61000084828501610000565b91505092915050565b600081519050919050565b600082825260008201905092915050565b60005b83811015610000578082015181840152600081019050610000565b83811115610000576000848401525b50505050565b600061000082610000565b6100008185610000565b9350610000818560008601610000565b61000081610000565b840191505092915050565b600060008201905081810360008301526100008184610000565b905092915050565b6000819050919050565b61000081610000565b811461000057600080fd5b50565b60008135905061000081610000565b92915050565b6000806000838503121561000057610000610000565b5b600061000085828601610000565b925050600061000085828601610000565b9150509250929050565b60008115159050919050565b61000081610000565b82525050565b60006000820190506100006000830184610000565b92915050565b6000819050919050565b600061000061000061000084610000565b610000565b610000565b9050919050565b600061000082610000565b9050919050565b600061000082610000565b9050919050565b61000081610000565b82525050565b60006000820190506100006000830184610000565b92915050565b61000081610000565b82525050565b60006000820190506100006000830184610000565b92915050565b60008060006000848603121561000057610000610000565b5b600061000086828701610000565b935050600061000086828701610000565b925050600061000086828701610000565b9150509250925092565b6000600082169050919050565b61000081610000565b82525050565b60006000820190506100006000830184610000565b92915050565b61000081610000565b82525050565b60006000820190506100006000830184610000565b92915050565b60006000828403121561000057610000610000565b5b600061000084828501610000565b91505092915050565b61000081610000565b811461000057600080fd5b50565b60008135905061000081610000565b92915050565b60006000828403121561000057610000610000565b5b600061000084828501610000565b91505092915050565b60006000828403121561000057610000610000565b5b600061000084828501610000565b91505092915050565b6000806000806000858703121561000057610000610000565b5b600061000087828801610000565b945050600061000087828801610000565b935050600061000087828801610000565b925050600061000087828801610000565b91505092959194509250565b600080fd5b60008083600084011261000057610000610000565b5b8235905067000000000000000081111561000057610000610000565b5b60008301915083600082028301111561000057610000610000565b5b9250929050565b60008060006000848603121561000057610000610000565b5b600084013567000000000000000081111561000057610000610000565b5b61000086828701610000565b9350935050600061000086828701610000565b9150509250925092565b6000806000838503121561000057610000610000565b5b600061000085828601610000565b925050600061000085828601610000565b9150509250929050565b7f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f0000000000000000000000000000000000000000000000000000000000000000600052600060005260006000fd5b7f0000000000000000000000000000000000000000000000000000000000000000600052600060005260006000fd5b600061000082610000565b91507f000000000000000000000000000000000000000000000000000000000000000082141561000057610000610000565b5b600082019050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b7f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b600061000082610000565b915061000083610000565b9250827f00000000000000000000000000000000000000000000000000000000000000000382111561000057610000610000565b5b828201905092915050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b600061000082610000565b915061000083610000565b92508282101561000057610000610000565b5b828203905092915050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b60008151905061000081610000565b92915050565b60006000828403121561000057610000610000565b5b600061000084828501610000565b91505092915050565b6000819050919050565b600061000061000061000084610000565b610000565b610000565b9050919050565b61000081610000565b82525050565b600081519050919050565b600082825260008201905092915050565b6000819050600082019050919050565b61000081610000565b82525050565b60006100008383610000565b60008301905092915050565b6000600082019050919050565b600061000082610000565b6100008185610000565b935061000083610000565b8060005b838110156100005781516100008882610000565b975061000083610000565b925050600081019050610000565b5085935050505092915050565b60006000820190506100006000830188610000565b6100006000830187610000565b81810360008301526100008186610000565b90506100006000830185610000565b6100006000830184610000565b9695505050505050565b7f0000000000000000000000000000000000000000000000000000000000000000600052600060005260006000fd5b600061000082610000565b915061000083610000565b92508261000057610000610000565b5b828204905092915050565b7f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b9050919050565b600061000082610000565b915061000083610000565b9250817f0000000000000000000000000000000000000000000000000000000000000000048311821515161561000057610000610000565b5b828202905092915050565b7f000000000000000000000000000000000000000000000000000000000000000060008201527f0000000000000000000000000000000000000000000000000000000000000000600082015250565b6000610000600083610000565b915061000082610000565b600082019050919050565b6000600082019050818103600083015261000081610000565b905091905056fe45524332303a20740000000000000000000000000000000000000000007300000000000000000000".to_string();
        // convert to bytes
        let bytes = Bytes::from_str(&bytecode);
        let bytes = bytes.unwrap();
        let ngrams1 = bytecode2ngrams(&bytes, 5);
        let bytes = Bytes::from_str(&similar_bytecode);
        let bytes = bytes.unwrap();
        let ngrams2 = bytecode2ngrams(&bytes, 5);
        let similarity = cosine_similarity(&ngrams1, &ngrams2);
        println!("{}", similarity);
        assert!(similarity > 0.98);
    }

    #[tokio::test]
    #[ignore]
    async fn test_load_skeleton() {
        let address = Address::from_str("0xe9428d4a341ac20e9f2e6b95b12c9ad52733fcd9").unwrap();
        let skeleton = get_skeleton_from_address("http://localhost:9080", &address, 5).await;
        let skeleton = skeleton.unwrap();
        assert!(skeleton.is_some());
    }

    #[test]
    fn test_short_bytecodes() {
        let bytes = Bytes::from_str("0x6d00000000000000000000000000003318585733ff").unwrap();
        let ngrams1 = bytecode2ngrams(&bytes, 2);
        let bytes = Bytes::from_str("0x6e0000000000000000000000000000003318585733ff").unwrap();
        let ngrams2 = bytecode2ngrams(&bytes, 2);
        let similarity = cosine_similarity(&ngrams1, &ngrams2);
        println!("{}", similarity);
        assert!(similarity > 0.83);
    }

}
